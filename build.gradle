subprojects { subproject ->

    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'signing'
    apply plugin: 'checkstyle'
    apply plugin: 'findbugs'
    apply plugin: 'idea'

    jar.baseName = subproject.name

    [compileJava, compileTestJava].each {
        it.options.compilerArgs << '-Xlint:unchecked'
    }

    checkstyle {
        configFile = file("${rootDir}/config/checkstyle/google_checks.xml")
        toolVersion = '6.18'
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task tarBall(type: Tar) {
        classifier = 'dist'
        baseName = subproject.name
        from subproject.configurations.runtime
        from jar
    }

    artifacts {
        archives javadocJar, sourcesJar, tarBall
    }

    signing {
        sign configurations.archives
        required {
            gradle.taskGraph.hasTask("uploadArchives")
        }
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment {
                    MavenDeployment deployment -> signing.signPom(deployment)
                }

                repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2') {
                    authentication(userName: findProperty('ossrhUsername') ?: '', password: findProperty('ossrhPassword') ?: '')
                }

                snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots') {
                    authentication(userName: findProperty('ossrhUsername') ?: '', password: findProperty('ossrhPassword') ?: '')
                }

                pom.project {

                    licenses {
                        license {
                            name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    scm {
                        connection 'scm:git:git://github.com/wepay/kafka-connect-bigquery.git'
                        developerConnection 'scm:git:ssh://github.com:wepay/kafka-connect-bigquery.git'
                        url 'https://github.com/wepay/kafka-connect-bigquery'
                    }

                    developers {
                        developer {
                            id 'C0urante'
                            name 'Chris Egerton'
                            email 'chrise@wepay.com'
                        }

                        developer {
                            id 'moirat'
                            name 'Moira Tagle'
                            email 'moirat@wepay.com'
                        }
                    }
                }
            }
        }
    }
}
